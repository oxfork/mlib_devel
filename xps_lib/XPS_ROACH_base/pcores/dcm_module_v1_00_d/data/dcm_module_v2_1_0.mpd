#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2009 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : dcm_module
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN dcm_module

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = Digital Clock Manager (DCM)
OPTION LONG_DESC = The digital clock manager module is a wrapper around the DCM primitive which allows it to be used in the EDK tool suite.
OPTION IP_GROUP = 'Clock, Reset and Interrupt:MICROBLAZE:PPC'
OPTION ARCH_SUPPORT_MAP = (aspartan3=PREFERRED, spartan3=PREFERRED, spartan3an=PREFERRED, spartan3a=PREFERRED, spartan3e=PREFERRED, spartan3adsp=PREFERRED, virtex4lx=PREFERRED, virtex4sx=PREFERRED, virtex4fx=PREFERRED, virtex5lx=PREFERRED, virtex5sx=PREFERRED, virtex5fx=PREFERRED, aspartan3e=PREFERRED, aspartan3a=PREFERRED, aspartan3adsp=PREFERRED, qvirtex4lx=PREFERRED, qvirtex4sx=PREFERRED, qvirtex4fx=PREFERRED, qrvirtex4lx=PREFERRED, qrvirtex4sx=PREFERRED, qrvirtex4fx=PREFERRED)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION TCL_FILE = dcm_module_v2_1_0.tcl
OPTION TOP = dcm_module


## Bus Interfaces

## Generics for VHDL or Parameters for Verilog
PARAMETER C_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW= Low, HIGH= High)
PARAMETER C_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW= Low, HIGH= High)
PARAMETER C_DUTY_CYCLE_CORRECTION = TRUE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKIN_DIVIDE_BY_2 = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE= None, 1X= 1X, 2X= 2X)
PARAMETER C_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE= None, FIXED= Fixed, VARIABLE= Variable, VARIABLE_POSITIVE=  Variable Positive , VARIABLE_CENTER=  Variable Center , DIRECT= Direct)
PARAMETER C_DSS_MODE = NONE, DT = STRING, VALUES = (NONE= None)
PARAMETER C_STARTUP_WAIT = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023)
PARAMETER C_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32)
PARAMETER C_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32)
PARAMETER C_CLKDV_DIVIDE = 2.0, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0)
PARAMETER C_CLKIN_PERIOD = 41.66666, DT = REAL, IO_IS = clk_freq, CLK_PORT = CLKIN, CLK_UNIT = NS
PARAMETER C_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=  System Synchronous , SOURCE_SYNCHRONOUS=  Source Synchronous , 0= 0, 1= 1, 2= 2, 3= 3, 4= 4, 5= 5, 6= 6, 7= 7, 8= 8, 9= 9, 10= 10, 11= 11, 12= 12, 13= 13, 14= 14, 15= 15)
PARAMETER C_CLKIN_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFB_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK0_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK90_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK270_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKDV_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK2X_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLK2X180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFX_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_CLKFX180_BUF = FALSE, DT = BOOLEAN, VALUES = (TRUE= True, FALSE= False)
PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, IO_IS = polarity, RANGE = (0:1), VALUES = (0 =  0: Active Low , 1 =  1: Active High )
PARAMETER C_FAMILY = virtex2, DT = string

## Ports
PORT RST = "", DIR = I
PORT CLKIN = "", DIR = I, SIGIS = CLK
PORT CLKFB = "", DIR = I
PORT PSEN = "", DIR = I
PORT PSINCDEC = "", DIR = I
PORT PSCLK = "", DIR = I
PORT DSSEN = "", DIR = I
PORT CLK0 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK90 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK270 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLKDV = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 / ((C_CLKDV_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT CLK2X = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 2.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLK2X180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 2.0 / ( (C_CLKIN_DIVIDE_BY_2)? 2 : 1 )
PORT CLKFX = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 *  C_CLKFX_MULTIPLY / ((C_CLKFX_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT CLKFX180 = "", DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKFX_MULTIPLY / ((C_CLKFX_DIVIDE) * ((C_CLKIN_DIVIDE_BY_2)? 2 : 1 ))
PORT STATUS = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE
PORT LOCKED = "", DIR = O
PORT PSDONE = "", DIR = O

END
